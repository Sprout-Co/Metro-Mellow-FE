@import "@/styles/abstracts/variables";
@import "@/styles/abstracts/mixins";
@import "@/styles/abstracts/functions";

.faq {
  padding: spacing("6xl") 0;
  position: relative;
  overflow: hidden;

  &__container {
    @include container;
    position: relative;
    z-index: 2;
  }

  &__pattern {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image:
      linear-gradient(
        to right,
        rgba(color("primary", "base"), 0.05) 1px,
        transparent 1px
      ),
      linear-gradient(
        to bottom,
        rgba(color("primary", "base"), 0.05) 1px,
        transparent 1px
      );
    background-size: 20px 20px;
    opacity: 0.5;
    z-index: 1;
  }

  &__header {
    text-align: center;
    max-width: 800px;
    margin: 0 auto spacing("5xl");
  }

  &__badge {
    display: inline-block;
    padding: spacing("xs") spacing("sm");
    background-color: rgba(color("primary", "base"), 0.1);
    color: color("primary", "base");
    font-size: map-get($font-sizes, "xs");
    font-weight: map-get($font-weights, "semibold");
    border-radius: border-radius("full");
    margin-bottom: spacing("sm");
    letter-spacing: 1px;
  }

  &__title {
    font-family: $font-family-heading;
    font-weight: map-get($font-weights, "bold");
    font-size: map-get($font-sizes, "3xl");
    color: color("neutral", "black");
    margin-bottom: spacing("md");

    @include breakpoint-up("md") {
      font-size: map-get($font-sizes, "4xl");
    }
  }

  &__subtitle {
    font-size: map-get($font-sizes, "base");
    color: color("neutral", "darker");
    line-height: map-get($line-heights, "relaxed");
    margin: 0 auto;
    max-width: 700px;

    @include breakpoint-up("md") {
      font-size: map-get($font-sizes, "lg");
    }
  }

  &__content {
    display: grid;
    grid-template-columns: 1fr;
    gap: spacing("3xl");

    @include breakpoint-up("lg") {
      grid-template-columns: 2fr 1fr;
      gap: spacing("4xl");
    }
  }

  &__accordionContainer {
    display: flex;
    flex-direction: column;
    gap: spacing("md");
  }

  &__accordionItem {
    background-color: color("neutral", "white");
    border-radius: border-radius("lg");
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease;

    &:hover {
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

    &--active {
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      transform: translateY(-2px);

      .faq__accordionHeader {
        background-color: rgba(color("primary", "base"), 0.05);

        &::before {
          transform: scaleX(1);
          opacity: 1;
        }
      }
    }
  }

  &__accordionHeader {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: spacing("lg") spacing("xl");
    background: none;
    border: none;
    cursor: pointer;
    text-align: left;
    position: relative;
    overflow: hidden;
    transition: background-color 0.3s ease;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 3px;
      background-color: color("primary", "base");
      transform: scaleX(0);
      opacity: 0;
      transition:
        transform 0.3s ease,
        opacity 0.3s ease;
    }

    &:hover {
      background-color: rgba(color("primary", "base"), 0.03);
    }
  }

  &__accordionQuestion {
    font-weight: map-get($font-weights, "semibold");
    font-size: map-get($font-sizes, "base");
    color: color("neutral", "black");
    padding-right: spacing("md");

    @include breakpoint-up("md") {
      font-size: map-get($font-sizes, "lg");
    }
  }

  &__accordionIcon {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    color: color("primary", "base");
    transition: transform 0.3s ease;

    .faq__accordionItem--active & {
      transform: rotate(180deg);
    }
  }

  // This is the key part that needed fixing
  &__accordionBody {
    height: 0;
    overflow: hidden;
    transition: height 0.3s ease-in-out;

    &--active {
      height: auto;
      // Force a minimum height to ensure content is visible
      min-height: 50px;
      // Set a big enough max-height to accommodate content
      // without knowing exact height (will be clipped if too large)
      max-height: 1000px;
      transition: height 0.3s ease-in-out;
    }
  }

  &__accordionContent {
    padding: 0 spacing("xl") spacing("lg");
  }

  &__accordionAnswer {
    font-size: map-get($font-sizes, "base");
    line-height: map-get($line-heights, "relaxed");
    color: color("neutral", "darker");
    margin: 0;
  }

  &__callout {
    background-color: color("primary", "base");
    border-radius: border-radius("xl");
    padding: spacing("xl");
    color: color("neutral", "white");
    height: fit-content;
    position: relative;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      width: 150px;
      height: 150px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      transform: translate(30%, -30%);
    }

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100px;
      height: 100px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      transform: translate(-30%, 30%);
    }
  }

  &__calloutTitle {
    font-weight: map-get($font-weights, "bold");
    font-size: map-get($font-sizes, "xl");
    margin-bottom: spacing("md");
    position: relative;
    z-index: 1;
  }

  &__calloutText {
    margin-bottom: spacing("lg");
    font-size: map-get($font-sizes, "base");
    line-height: map-get($line-heights, "relaxed");
    opacity: 0.9;
    position: relative;
    z-index: 1;
  }

  &__calloutButton {
    display: inline-flex;
    align-items: center;
    gap: spacing("xs");
    padding: spacing("sm") spacing("md");
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: border-radius("md");
    color: color("neutral", "white");
    font-weight: map-get($font-weights, "medium");
    text-decoration: none;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
    position: relative;
    z-index: 1;

    &:hover {
      background-color: rgba(255, 255, 255, 0.3);
      transform: translateX(5px);
    }

    svg {
      transition: transform 0.3s ease;
    }

    &:hover svg {
      transform: translateX(3px);
    }
  }
}
